events {
    worker_connections 1000;
}

http {
    proxy_cache_path /cache levels=1:2 keys_zone=cache:10m inactive=30d max_size=1m;

    limit_req_zone $binary_remote_addr zone=user_tile_rate_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=user_other_rate_limit:10m rate=20r/s;

    upstream postserve {
        server postserve:8090 max_conns=128;
    }

    upstream tileserver-gl {
        server tileserver-gl;
    }

    server {
        listen 0.0.0.0:80;
        server_name nginx;

        # Raster tile >= z15, no expiration from OSM update
        location ~ /styles/(?<tile_path>.*/[0-9]+/[0-9]+/(1[5-9]|2[0-9])\.(png|jpeg|webp))$ {
            proxy_pass http://tileserver-gl;
            proxy_set_header Host $http_host;
            proxy_buffering on;

            limit_req zone=user_tile_rate_limit burst=15 nodelay;

            {% if env['NGINX_DISABLE_CACHE'] %}
            expires 1d;
            add_header Cache-Control "public";

            proxy_cache cache;
            proxy_cache_valid 200 12h;
            proxy_cache_key $tile_path;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            {% endif %}
        }

        # Raster tile <= 14
        location ~ /styles/(?<tile_path>.*/[0-9]+/[0-9]+/[0-9]+\.(png|jpeg|webp))$ {
            proxy_pass http://tileserver-gl;
            proxy_set_header Host $http_host;
            proxy_buffering on;

            limit_req zone=user_tile_rate_limit burst=30 nodelay;

            {% if not env.get('NGINX_DISABLE_CACHE') %}
            expires 7d;
            add_header Cache-Control "public";

            proxy_cache cache;
            proxy_cache_valid 200 30d;
            proxy_cache_key $tile_path;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            {% endif %}
        }

        # Vector tile, tilejson
        rewrite ^/data/v3/([0-9]+/[0-9]+/[0-9]+\.pbf)$ /data/v3/tiles/$1 last;
        location ~ /data/v3/(?<postserve_path>.*)$ {
            proxy_pass http://postserve/$postserve_path;
            proxy_set_header Host $http_host;
            proxy_buffering on;

            limit_req zone=user_tile_rate_limit burst=30 nodelay;

            {% if not env.get('NGINX_DISABLE_CACHE') %}
            expires 1d;
            add_header Cache-Control "public";

            proxy_cache cache;
            proxy_cache_valid 200 204 1d;
            proxy_cache_key v3/$postserve_path;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            {% endif %}
        }

        # Other static and database less resources
        # HTML, CSS, JS, style, font, sprites
        location / {
            proxy_pass http://tileserver-gl;
            proxy_set_header Host $http_host;
            proxy_buffering on;

            limit_req zone=user_other_rate_limit burst=30 nodelay;

            {% if not env.get('NGINX_DISABLE_CACHE') %}
            expires 1d;
            add_header Cache-Control "public";

            proxy_cache cache;
            proxy_cache_valid 200 204 30d;
            proxy_cache_key $request_uri;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            {% endif %}
        }
    }

    server {
        listen localhost:81;
        server_name nginx_internal;

        # Vector tile and raster <= 14
        location ~ (?<tile_path>.*/[0-9]+/[0-9]+/[0-9]+\.(pbf|png|jpeg|webp))$ {
            proxy_buffering on;

            {% if not env.get('NGINX_DISABLE_CACHE') %}
            proxy_cache cache;
            proxy_cache_key $tile_path;
            proxy_cache_lock on;
            proxy_cache_purge EXPIRE from 127.0.0.1; # From ngx_cache_purge module
            {% endif %}
        }
    }

    server {
        listen 0.0.0.0:82;
        server_name nginx_status;
        location /nginx_status {
            stub_status on;
            access_log off;
            allow all;
        }
    }
}
